server:
  port: 8000
# Tomcat metrics enabled
# Spring Cloud for AWS Micrometer CloudWatch Metrics Integration Enabled if local testing is required
#  tomcat:
#    mbeanregistry:
#      enabled: true
spring:
  sql:
    init:
      platform: h2
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH
    driver-class-name: org.h2.Driver
    username: sa
    password:
# Dynamic Routing DataSource
    read:
      url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      driver-class-name: org.h2.Driver 
      username: sa
      password:
    write:
      url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      driver-class-name: org.h2.Driver 
      username: sa
      password:
    dynamic-routing:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*" 
  info:
    os:
      enabled: true
    java:
      enabled: true    
# Spring Cloud for AWS Micrometer CloudWatch Metrics Integration Enabled if local testing is required
#  cloudwatch:
#    metrics:
#      export:
#        enabled: true
                         
logging:
  level:
    org.springframework: INFO
    org.springframework.jdbc: INFO
    com.example: DEBUG
    com.example.fw.web.aspect.LogAspect: TRACE		
#    software.amazon.awssdk: DEBUG