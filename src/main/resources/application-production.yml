server:
  tomcat:
# Tomcat metrics enabled for Spring Cloud for AWS Micrometer CloudWatch Metrics Integration    
    mbeanregistry:
      enabled: true

spring:
  sql:
    init:
      platform: postgresql
      mode: always      
  datasource:    
    url: jdbc:postgresql://localhost:5432/testdb
    driver-class-name: org.postgresql.Driver 
    username: postgres
    password: password
# Dynamic Routing DataSource
    read:
      driver-class-name: org.postgresql.Driver
#      hikari:
#        maximum-pool-size: 30
    write:
      driver-class-name: org.postgresql.Driver
#      hikari:
#        maximum-pool-size: 30
# Spring Cloud for AWS Parameter Store Integration & Secrets Manager Integration Enabled
  cloud:
    aws:
      parameterstore:
        enabled: true
      secretsmanager:
        enabled: true
  config:
    import: 
      - optional:aws-parameterstore:/config/common/;/config/${spring.application.name}/
      - optional:aws-secretsmanager:/secrets/database-secrets?prefix=spring.datasource.
      - optional:aws-secretsmanager:/secrets/database-secrets?prefix=spring.datasource.read.
      - optional:aws-secretsmanager:/secrets/database-secrets?prefix=spring.datasource.write.
        
# Spring Boot Actuator
management:
  endpoints:
    web:
      discovery:
        enabled: false
# Metrics enabled        
  metrics:
    enable:
      all: false
      system: true
      process: true
      disk: true
      jvm: true
      hikaricp: true
      mybatis: true
      tomcat: true
# Spring Cloud for AWS Micrometer CloudWatch Metrics Integration Enabled
  cloudwatch:
    metrics:
      export:
        enabled: true
        namespace: ${spring.application.name}